{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Código NO2","provenance":[{"file_id":"14atLca0y1pBvwAR3VidcQCjLi2KJoktW","timestamp":1628798127321},{"file_id":"https://github.com/google/earthengine-community/blob/master/tutorials/time-series-visualization-with-altair/index.ipynb","timestamp":1623375486558}],"collapsed_sections":["KIBEdaqlkxz0"]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","source":["\n","\n","The following code was used to download NO2 data from GEE. Likewise, the methodology for selecting the region of interest and the processing for the generation of daily and monthly time series is presented.\n"],"metadata":{"id":"m2-7DLuwKw7p"}},{"cell_type":"markdown","metadata":{"id":"xCezQcI-Qd3o"},"source":["### Earth Engine API and other libraries\n"]},{"cell_type":"code","metadata":{"id":"DUBNDgqyiPZW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639595183968,"user_tz":180,"elapsed":18781,"user":{"displayName":"Juan Martín Guerrieri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiReHBoTdvYazxeRcMNBdnGXwxXTWljzZ9e6cVuRg=s64","userId":"12263290540323205118"}},"outputId":"fe8f6171-4b87-4ee2-dd7f-87c8d5a1c691"},"source":["import ee\n","ee.Authenticate()\n","ee.Initialize()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["To authorize access needed by Earth Engine, open the following URL in a web browser and follow the instructions. If the web browser does not start automatically, please manually browse the URL below.\n","\n","    https://accounts.google.com/o/oauth2/auth?client_id=517222506229-vsmmajv00ul0bs7p89v5m89qs8eb9359.apps.googleusercontent.com&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fearthengine+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdevstorage.full_control&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&response_type=code&code_challenge=xdTngtksAiR6zE_yM4Bjke_b7PcYVfJHJ85Nhopq1_Q&code_challenge_method=S256\n","\n","The authorization workflow will generate a code, which you should paste in the box below. \n","Enter verification code: 4/1AX4XfWh7oo83Cf0zUZzg_61XDnLVe1fUPfVhanJwOon2nohDXqYUva1CeBg\n","\n","Successfully saved authorization token.\n"]}]},{"cell_type":"code","metadata":{"id":"wo_AiuPLh0kr"},"source":["import pandas as pd\n","import numpy as np\n","import datetime\n","from dateutil.relativedelta import relativedelta\n","\n","import matplotlib.pyplot as plt\n","from google.colab import files\n"," \n","\n","import numpy.ma as ma\n","!pip install geemap\n","import geemap\n","\n","!pip install \"basemap == 1.3.0b1\" \"basemap-data == 1.3.0b1\" #https://github.com/matplotlib/basemap/issues/525\n","!pip install basemap\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from mpl_toolkits.basemap import Basemap"],"metadata":{"id":"Xp_2zkGlr7IZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Area of Interest"],"metadata":{"id":"wjEnxtInAK6-"}},{"cell_type":"code","metadata":{"id":"UgVqWpyfWNUy"},"source":["ciudad='Buenos Aires'\n","\n","delta=0.1\n","if ciudad =='Lima':\n","   lat_n=-11.5\n","   lat_s=-12.55\n","   lon_w=-77.25\n","   lon_e=-76.60\n","if ciudad =='San Pablo':\n","   lat_n=-23.3\n","   lat_s=-24.05\n","   lon_w=-46.85\n","   lon_e=-46.35\n","if ciudad =='Rio de Janeiro':\n","   lat_n=-22.72\n","   lat_s=-23.1\n","   lon_w=-43.80\n","   lon_e=-43.08\n","if ciudad =='Mexico':\n","   lat_n=19.94\n","   lat_s=19.08\n","   lon_w=-99.4\n","   lon_e=-98.9\n","if ciudad =='Bogota':\n","   lat_n=4.85\n","   lat_s=4.45\n","   lon_w=-74.25\n","   lon_e=-74.00\n","if ciudad =='Santiago':\n","   lat_n=-33.1\n","   lat_s=-33.65\n","   lon_w=-71\n","   lon_e=-70.15\n","if ciudad =='Buenos Aires':\n","   lat_n=-34.52\n","   lat_s=-34.73\n","   lon_w=-58.56\n","   lon_e=-58.33 \n","   delta = 0.2\n","\n","rdp = ee.Geometry.Rectangle([np.round(lon_w-delta,2), np.round(lat_s-delta,2), np.round(lon_e+delta,2), np.round(lat_n+delta,2)],geodesic= False,proj='EPSG:4326')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gYum4AP_T7Dq"},"source":["## Tiff"]},{"cell_type":"code","metadata":{"id":"evEydFOOM2tM"},"source":["##para exportar tiff\n","\n","start = datetime.datetime.strptime(\"2019-04-01\", \"%Y-%m-%d\")\n","end = datetime.datetime.strptime(\"2020-05-01\", \"%Y-%m-%d\")\n","r = relativedelta(end, start)\n","meses=r.years*12+r.months\n","date_generated = [start + relativedelta(months=x) for x in range(0, meses)]\n","\n","for ii, date in enumerate(date_generated):\n","      inicio=date.strftime(\"%Y-%m-%d\")\n","      ini=date.strftime(\"%Y_%m\")\n","      fin=date + relativedelta(days=1)\n","      final=fin.strftime(\"%Y-%m-%d\")\n","\n","      collection=ee.ImageCollection('COPERNICUS/S5P/OFFL/L3_NO2').select('tropospheric_NO2_column_number_density').filterDate(inicio,final)\n","      collection_img_mean=collection.mean().setDefaultProjection(collection.first().projection())\n","      geemap.ee_export_image_to_drive(collection_img_mean, description=ciudad+'_' + ini, region=rdp, scale=1113.2)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vpAoSY6Vp5_J"},"source":["## Masks"]},{"cell_type":"code","metadata":{"id":"p_oB9IEXTnzs"},"source":["qs=[0.7]  ##pueden cambiar el percentil que se quiera\n","eq=[]\n","start = datetime.datetime.strptime(\"2018-07-01\", \"%Y-%m-%d\")\n","end = datetime.datetime.strptime(\"2020-03-01\", \"%Y-%m-%d\")\n","r = relativedelta(end, start)\n","meses=r.years*12+r.months\n","date_generated = [start + relativedelta(months=x) for x in range(0, meses)]\n","for q in qs:  \n","  e=[]\n","  for ii, date in enumerate(date_generated):\n","        inicio=date.strftime(\"%Y-%m-%d\")\n","        ini=date.strftime(\"%Y_%m\")\n","        fin=date + relativedelta(months=1)\n","        final=fin.strftime(\"%Y-%m-%d\")\n","        print('media entre', inicio, 'y',final)\n","\n","        if ciudad == 'Bogota': ##la mascara se hace en función del NO2 total, por el problema de los nans.\n","           collection=ee.ImageCollection('COPERNICUS/S5P/OFFL/L3_NO2').select('NO2_column_number_density').filterDate(inicio,final)\n","        else:\n","           collection=ee.ImageCollection('COPERNICUS/S5P/NRTI/L3_NO2').select('tropospheric_NO2_column_number_density').filterDate(inicio,final)\n","        collection_img=collection.mean().setDefaultProjection(collection.first().projection())\n","        ax=geemap.ee_to_numpy(collection_img,region=rdp)\n","        \n","\n","        if ax is None:\n","          pass\n","        else: \n","            axx=ax[:,:,0]\n","            no2q=np.quantile(axx,q)\n","            b=ma.masked_less_equal(axx, no2q)\n","            unos=np.ones(axx.shape)\n","            unos_=ma.array(unos, mask=b.mask)\n","\n","            e.append(unos_)\n","\n","  eee=sum(e)\n","  eee_val=np.max(eee)\n","  eee=sum(e)/eee_val\n","\n","  am = ma.MaskedArray(eee,fill_value=0)\n","  amm=am.filled()\n","  amm=amm.astype(int)\n","  eq.append(amm)\n","\n","  #print(np.sum(amm)) ## número de pixeles de la mascara\n","\n","\n","  aa, bb = amm.shape\n","  fig=plt.figure(figsize = (8,8))\n","\n","  lats=np.round(np.linspace(np.round(lat_s-delta,2),np.round(np.round(lat_s-delta,2)+(aa-1)*0.01,2),aa),2)\n","  lons=np.round(np.linspace(np.round(lon_w-delta,2),np.round(np.round(lon_w-delta,2)+(bb-1)*0.01,2),bb),2)\n","  \n","  X,Y=np.meshgrid(lons,lats)\n","\n","  m = Basemap(projection='merc',llcrnrlon=lon_w-delta,llcrnrlat=lat_s-delta,urcrnrlon=lon_e+delta-0.01,urcrnrlat=lat_n+delta-0.01,resolution='i')\n","  \n","  x, y = m(X, Y)\n","  m.drawcoastlines()\n","  m.drawcountries()\n","  m.drawlsmask(land_color='white', ocean_color='white') \n","  #m.readshapefile(mapa,'partidos',drawbounds=True) \n","  parallels = np.arange(lats[0],lats[-1],(lats[-1]-lats[0])/5)  \n","  meridians = np.arange(lons[0],lons[-1],(lons[-1]-lons[0])/5)  \n","  m.drawparallels(parallels,labels=[1,0,0,0],fontsize=10)\n","  m.drawmeridians(meridians,labels=[0,0,0,1],fontsize=10)\n","  iny=plt.pcolormesh(x,y,amm,vmin=0,vmax=1, cmap='jet')\n","  CS= plt.contour(x,y,amm,levels=[0.0])\n","  ##Cuando se realizan los contour lines, se generan varias curvas, se selecciona la que coincide con la región urbana. Se grafica y se guarda\n","  if ciudad == 'Bogota':\n","    dat0= CS.allsegs[0][0]\n","    dat1= CS.allsegs[0][1]\n","    dat01=np.concatenate((dat0,dat1))\n","    final=dat01[0].reshape(1,-1)\n","    dao=np.concatenate((dat01,final))\n","    plt.plot(dao[:,0],dao[:,1],color='white')\n","    plt.savefig('maskara_'+ciudad+str(int(q*100))+'.png')\n","    plt.close()\n","    files.download('maskara_'+ciudad+str(int(q*100))+'.png') \n","\n","    #Se guardan las coordenadas de la máscara principal  \n","    CS= plt.contour(X,Y,amm,levels=[0.0])\n","    dat0= CS.allsegs[0][0]\n","    dat1= CS.allsegs[0][1]\n","    dat01=np.concatenate((dat0,dat1))\n","    final=dat01[0].reshape(1,-1)\n","    dao=np.concatenate((dat01,final))\n","    dao=np.round(dao,2)\n","\n","    dao_dic={'Lon':dao[:,0],'Lat':dao[:,1]}\n","    dao_df=pd.DataFrame(data=dao_dic)\n","    dao_df.to_csv('coordMask_'+ciudad+'.csv',index=False)\n","    files.download('coordMask_'+ciudad+'.csv')\n","  \n","  else:\n","    if ciudad in ['Buenos Aires', 'Lima','Rio de Janeiro','Bogota']:\n","      px=0\n","    if ciudad in ['Mexico', 'San Pablo']:\n","      px=1\n","    \n","    dat0= CS.allsegs[0][px]\n","    plt.plot(dat0[:,0],dat0[:,1],color='white')\n","    plt.savefig('maskara_'+ciudad+str(int(q*100))+'.png')\n","    plt.close()\n","    files.download('maskara_'+ciudad+str(int(q*100))+'.png') \n","\n","    \n","    #Se guardan las coordenadas de la máscara principal  \n","    CS= plt.contour(X,Y,amm,levels=[0.0])\n","    dat0= CS.allsegs[0][px]\n","    dat0=np.round(dat0,2)\n","    dat0_dic={'Lon':dat0[:,0],'Lat':dat0[:,1]}\n","    dat0_df=pd.DataFrame(data=dat0_dic)\n","    dat0_df.to_csv('coordMask_'+ciudad+'.csv',index=False)\n","    files.download('coordMask_'+ciudad+'.csv')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oxeeVDke3L8K"},"source":["## Region reduction function\n","\n","Functions from https://developers.google.com/earth-engine/tutorials/community/time-series-visualization-with-altair?hl=sr\n"]},{"cell_type":"code","metadata":{"id":"0mkEjSrFlkjL"},"source":["def create_reduce_region_function(geometry,\n","                                  reducer=ee.Reducer.mean(),\n","                                  scale=1000,\n","                                  crs='EPSG:4326',\n","                                  bestEffort=True,\n","                                  maxPixels=1e13,\n","                                  tileScale=4):\n","\n","  def reduce_region_function(img):\n","\n","    stat = img.reduceRegion(\n","        reducer=reducer,\n","        geometry=geometry,\n","        scale=scale,\n","        crs=crs,\n","        bestEffort=bestEffort,\n","        maxPixels=maxPixels,\n","        tileScale=tileScale)\n","\n","    return ee.Feature(geometry, stat).set({'millis': img.date().millis()})\n","  return reduce_region_function\n","\n","# Define a function to transfer feature properties to a dictionary.\n","def fc_to_dict(fc):\n","  prop_names = fc.first().propertyNames()\n","  prop_lists = fc.reduceColumns(\n","      reducer=ee.Reducer.toList().repeat(prop_names.size()),\n","      selectors=prop_names).get('list')\n","\n","  return ee.Dictionary.fromLists(prop_names, prop_lists)\n","\n","# Function to add date variables to DataFrame.\n","def add_date_info(df):\n","  df['Timestamp'] = pd.to_datetime(df['millis'], unit='ms')\n","  df['Year'] = pd.DatetimeIndex(df['Timestamp']).year\n","  df['Month'] = pd.DatetimeIndex(df['Timestamp']).month\n","  df['Day'] = pd.DatetimeIndex(df['Timestamp']).day\n","  df['DOY'] = pd.DatetimeIndex(df['Timestamp']).dayofyear\n","  return df"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Download of raw time series using previous masks"],"metadata":{"id":"WzNMZr4u-KaW"}},{"cell_type":"code","source":["ciudad='Buenos Aires'\n","\n","### archivos de las coordenadas \n","if ciudad == 'Buenos Aires':\n","  coord_file ='https://drive.google.com/file/d/1y_liYcgc5FpWzZR-ykFJfLOxZaw-IQgk/view?usp=sharing'\n","if ciudad == 'Bogota':\n","  coord_file ='https://drive.google.com/file/d/1b4L01O16QVQ8O81y8mdojbS-N179bf6I/view?usp=sharing'\n","if ciudad == 'San Pablo':\n","  coord_file ='https://drive.google.com/file/d/1HDuap8AEhGHvrEtxDCXQSqVYOSuGZYZn/view?usp=sharing'\n","if ciudad == 'Rio de Janeiro':\n","  coord_file ='https://drive.google.com/file/d/1ZMjDyhsonpGMD2H_QpUp-VWANeZV8KNv/view?usp=sharing'\n","if ciudad == 'Lima':\n","  coord_file ='https://drive.google.com/file/d/1mM9h-RcPcO3m_hy0GH5_JDutAfh8BUyd/view?usp=sharing'\n","if ciudad == 'Mexico':\n","  coord_file ='https://drive.google.com/file/d/1ON0Fl7YIp8LBWjxrRXyHRmSABmt6Zz06/view?usp=sharing'\n","  \n","url=coord_file\n","url2='https://drive.google.com/uc?id=' + url.split('/')[-2]\n","coord_df=pd.read_csv(url2)\n","\n","coord=np.zeros((len(coord_df.Lon.values),2))\n","coord[:,0]=coord_df.Lon.values\n","coord[:,1]=coord_df.Lat.values\n","lista_coord=coord.tolist()\n","#print(lista_coord)\n","\n","rdp = ee.Geometry.Polygon(lista_coord)\n","inicio=['2018-07-01','2019-01-01','2020-01-01']\n","final =['2019-01-01','2020-01-01','2020-12-01']\n","    \n","reduce_mean = create_reduce_region_function(geometry=rdp, reducer=ee.Reducer.mean(), scale=1113.2, crs='EPSG:4326')\n","reduce_std = create_reduce_region_function(geometry=rdp, reducer=ee.Reducer.sampleStdDev(), scale=1113.2, crs='EPSG:4326')\n","for i in range(3):\n","\n","    year=inicio[i][:4]\n","\n","    gas_trop=ee.ImageCollection('COPERNICUS/S5P/OFFL/L3_NO2').select('tropospheric_NO2_column_number_density').filterDate(inicio[i],final[i])\n","    gas_trop_mean_fc = ee.FeatureCollection(gas_trop.map(reduce_mean)).filter(\n","        ee.Filter.notNull(gas_trop.first().bandNames()))\n","    gas_trop_std_fc = ee.FeatureCollection(gas_trop.map(reduce_std)).filter(\n","        ee.Filter.notNull(gas_trop.first().bandNames()))\n"," \n","    gas_trop_mean_dict=fc_to_dict(gas_trop_mean_fc).getInfo()\n","    gas_trop_std_dict=fc_to_dict(gas_trop_std_fc).getInfo()\n"," \n","    gas_trop_mean_df=pd.DataFrame(gas_trop_mean_dict)\n","    gas_trop_std_df=pd.DataFrame(gas_trop_std_dict)\n","\n","    gas_trop_mean_df =  add_date_info(gas_trop_mean_df)\n","    gas_trop_mean_df  = gas_trop_mean_df.rename(columns={'tropospheric_NO2_column_number_density': 'NO2_trop_mean'}).drop(columns=['millis', 'system:index'])\n","    gas_trop_mean_df['NO2_trop_std']=gas_trop_std_df['tropospheric_NO2_column_number_density']\n","\n","    gas_trop_mean_df.to_csv('NO2_trop_diario'+str(year)+'_'+ciudad+'.csv',index=True)\n","    files.download('NO2_trop_diario'+str(year)+'_'+ciudad+'.csv')"],"metadata":{"id":"Rkcsq13K-Qb3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Daily and monthly time series preprocessing code\n"],"metadata":{"id":"MRdRrdIBOrKl"}},{"cell_type":"code","source":["import datetime\n","megalopolis=['Buenos Aires','Bogota','Lima','Mexico','San Pablo','Rio de Janeiro']\n","pixeles=[259,367,1986,1165,633,750]\n","\n","gas='NO2_trop'\n","gasname='NO2 troposférico'\n","\n","for indice, ciudad in enumerate(megalopolis):\n","    \n","    if ciudad == 'Buenos Aires':\n","      url2018 ='https://drive.google.com/file/d/1aUUrPR41L4jYB8QfhCWOqUNxQwzJNU9G/view?usp=sharing'\n","      url2019 ='https://drive.google.com/file/d/1SVoyHZ0eyFHUTVUs1beKtFx9xPkntk_3/view?usp=sharing'\n","      url2020 ='https://drive.google.com/file/d/1JaHzmnsjwCMNHr3NL5oYeBrcHobNaw7b/view?usp=sharing'\n","    if ciudad == 'Bogota':\n","      url2018 ='https://drive.google.com/file/d/1I-DtOUmnCO06eZlsLDZjekdnnmnoKvoR/view?usp=sharing'\n","      url2019 ='https://drive.google.com/file/d/1mTmWOeJP5xZr7THt1HlYAWJ9Q5CcIfTh/view?usp=sharing'\n","      url2020 ='https://drive.google.com/file/d/1YKGZhcFFWW1vtNo7JGbxGqmZLf16KSQi/view?usp=sharing'\n","    if ciudad == 'Lima':\n","      url2018 ='https://drive.google.com/file/d/1LF6mRtXFAL4lSWyflSroKW3miVM4ekjz/view?usp=sharing'\n","      url2019 ='https://drive.google.com/file/d/116w1GbaZ2CMknQmfQ-7oDohzU7650Kkk/view?usp=sharing'\n","      url2020 ='https://drive.google.com/file/d/1rZt9F5m7dA94HrDLre1CADCJftm2KmYa/view?usp=sharing'\n","    if ciudad == 'San Pablo':\n","      url2018 ='https://drive.google.com/file/d/1zIKs2fyKFm8TLfBjssgXr1u9Mpd8Y2bM/view?usp=sharing'\n","      url2019 ='https://drive.google.com/file/d/1oFl8mDW9twrjKWw38KBJT_jZYp3bCfWm/view?usp=sharing'\n","      url2020 ='https://drive.google.com/file/d/1AU4N2uRSuw8qXMBxqRe4mH8K9l6d_07-/view?usp=sharing'\n","    if ciudad == 'Rio de Janeiro':\n","      url2018 ='https://drive.google.com/file/d/1HW3eLUf-ZTfspCk_GEbr-RsOSuPFZQhv/view?usp=sharing'\n","      url2019 ='https://drive.google.com/file/d/1hfXgfXXBeJwDIp1Si5i2z_p_ZKWFQ__o/view?usp=sharing'\n","      url2020 ='https://drive.google.com/file/d/18UnYiYLhGgZff9uT23oqWsmUbz_0cThW/view?usp=sharing'\n","    if ciudad == 'Mexico':\n","      url2018 ='https://drive.google.com/file/d/1RDHn15H2n-JJiZCQl82dk1fjIP6ZF6uo/view?usp=sharing'\n","      url2019 ='https://drive.google.com/file/d/1bRbK1tc8vLLMpFQeZXY1wsqBmdO_AHv4/view?usp=sharing'\n","      url2020 ='https://drive.google.com/file/d/1al0jmtdZ6EeJva9xMrwSvBlYet26KI6Y/view?usp=sharing'                        \n","\n","    url2018_2='https://drive.google.com/uc?id=' + url2018.split('/')[-2]\n","    url2019_2='https://drive.google.com/uc?id=' + url2019.split('/')[-2]\n","    url2020_2='https://drive.google.com/uc?id=' + url2020.split('/')[-2]\n","\n","    df1=pd.read_csv(url2018_2)\n","    df2=pd.read_csv(url2019_2)\n","    df3=pd.read_csv(url2020_2)\n","    \n","    df3=df3.drop(df3[df3.DOY > 333].index)  ### saco los valores posteriores a 27 de nov de 2020 por calibracion\n","    df=df1.append([df2,df3],ignore_index=True)\n","    df_diario=df.groupby(['Year','Month','Day']).mean()\n","    \n","    df_gas=df_diario.reset_index()\n","    df_gas['Fecha_datetime']=pd.to_datetime(df_gas['Year'].astype(str)+'-'+df_gas['Month'].astype(str)+'-'+df_gas['Day'].astype(str),format='%Y-%m-%d')\n","    #df_gas['dias']=df_gas['Fecha_datetime'].map(datetime.datetime.toordinal)\n","    #df_gas['DOW']=df_gas['Fecha_datetime'].dt.dayofweek\n","    #df_gas['dias']=df_gas['dias']-736876\n","\n","    df_gas.drop(columns=['DOY','Unnamed: 0'],inplace=True)\n","    columna=gas+'_mean' \n","  \n","    #df_gas= df_gas.drop(columns=['dias','DOW'])\n","    df_gas['var_e']=df_gas['NO2_trop_std']**2  ##error de la media epsacial al cuadrado\n","    df_mensual=df_gas.groupby(['Year','Month']).mean().reset_index().drop(columns=['Day','NO2_trop_std'])\n","    df_mensual['N_days']=df_gas.groupby(['Year', 'Month'])['NO2_trop_mean'].describe().reset_index()['count']\n","    df_mensual['SEM']=(df_mensual['var_e']/df_mensual['N_days'])**.5\n","    df_mensual=df_mensual.drop(columns=['var_e'])\n","    df_mensual['Fecha_datetime']=pd.to_datetime(df_mensual['Year'].astype(str)+'-'+df_mensual['Month'].astype(str),format='%Y-%m')\n","\n","    df_gas['SEM']=df_gas['NO2_trop_std']/np.sqrt(pixeles[indice])\n","    df_gas.drop(columns=['Fecha_datetime','var_e'],inplace=True)\n","\n","    df_gas.to_csv(ciudad+'NO2_trop_diario.csv',index=False)\n","    files.download(ciudad+'NO2_trop_diario.csv')\n","    df_mensual.to_csv(ciudad+'NO2_trop_mensual.csv',index=False)\n","    files.download(ciudad+'NO2_trop_mensual.csv')\n","\n","    indice_2019=np.logical_and(df_mensual['Year']==2019,df_mensual['Month']==4)\n","    indice_2020=np.logical_and(df_mensual['Year']==2020,df_mensual['Month']==4)\n","    print('La caída interanual en',ciudad,'durante abril es del:',np.round(100*(\n","        df_mensual[indice_2020]['NO2_trop_mean'].values[0]-df_mensual[indice_2019]['NO2_trop_mean']).values[0]/\n","                                                                       df_mensual[indice_2019]['NO2_trop_mean'].values[0],2),'%')\n"],"metadata":{"id":"jowKxYIQOqfS","colab":{"base_uri":"https://localhost:8080/","height":121},"executionInfo":{"status":"ok","timestamp":1639673521020,"user_tz":180,"elapsed":11712,"user":{"displayName":"Juan Martín Guerrieri","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiReHBoTdvYazxeRcMNBdnGXwxXTWljzZ9e6cVuRg=s64","userId":"12263290540323205118"}},"outputId":"8e09db79-c44b-4449-f5b3-cb970b073840"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_2cc92c8a-9119-43d8-b227-53198604a5d8\", \"Buenos AiresNO2_trop_diario.csv\", 47980)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_2dc47e35-822d-4d4c-aebc-fdcb03fec725\", \"Buenos AiresNO2_trop_mensual.csv\", 2019)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["La caída interanual en Buenos Aires durante abril es del: -56.25 %\n"]},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_f4f4c842-858f-4fe6-9de4-b1a72a7c1e39\", \"BogotaNO2_trop_diario.csv\", 13363)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_8e2c4d68-6b03-4722-9fc2-46fb8638ef0d\", \"BogotaNO2_trop_mensual.csv\", 1997)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["La caída interanual en Bogota durante abril es del: -28.94 %\n"]},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_ba34f499-9fe2-49ff-a54c-a062ddce3e31\", \"LimaNO2_trop_diario.csv\", 62883)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_5e968b9d-3d5f-4ba6-90f8-d9e2c7e7ff87\", \"LimaNO2_trop_mensual.csv\", 2017)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["La caída interanual en Lima durante abril es del: -71.79 %\n"]},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_ba0836c5-d047-4f95-97a0-29abb00285ed\", \"MexicoNO2_trop_diario.csv\", 51789)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_f15d4456-8cfd-4227-92b4-7fceec434799\", \"MexicoNO2_trop_mensual.csv\", 2024)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["La caída interanual en Mexico durante abril es del: -21.29 %\n"]},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_876e32e4-3f41-4aca-9ce3-d3685b7b445d\", \"San PabloNO2_trop_diario.csv\", 40382)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_16bf2113-8832-49fa-83e9-b04871f86658\", \"San PabloNO2_trop_mensual.csv\", 2018)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["La caída interanual en San Pablo durante abril es del: -39.26 %\n"]},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_88d97784-3867-42e2-9f76-18b906c7ef1d\", \"Rio de JaneiroNO2_trop_diario.csv\", 47358)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_aae0cbd0-a43d-4676-b958-3866adec0fa4\", \"Rio de JaneiroNO2_trop_mensual.csv\", 2003)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["La caída interanual en Rio de Janeiro durante abril es del: -39.08 %\n"]}]}]}